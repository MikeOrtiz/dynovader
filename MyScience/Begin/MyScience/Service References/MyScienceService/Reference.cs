//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace MyScience.MyScienceService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/TierDataLayer")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string FormField;
        
        private int IDField;
        
        private string NameField;
        
        private int OwnerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Form {
            get {
                return this.FormField;
            }
            set {
                if ((object.ReferenceEquals(this.FormField, value) != true)) {
                    this.FormField = value;
                    this.RaisePropertyChanged("Form");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((this.OwnerField.Equals(value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="MyScienceService.MyScienceService")]
    public interface MyScienceService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MyScienceService/GetProjects", ReplyAction="urn:MyScienceService/GetProjectsResponse")]
        System.IAsyncResult BeginGetProjects(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> EndGetProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:MyScienceService/SubmitData", ReplyAction="urn:MyScienceService/SubmitDataResponse")]
        System.IAsyncResult BeginSubmitData(int id, int projectid, int userid, string data, string location, System.AsyncCallback callback, object asyncState);
        
        int EndSubmitData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface MyScienceServiceChannel : MyScience.MyScienceService.MyScienceService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyScienceServiceClient : System.ServiceModel.ClientBase<MyScience.MyScienceService.MyScienceService>, MyScience.MyScienceService.MyScienceService {
        
        private BeginOperationDelegate onBeginGetProjectsDelegate;
        
        private EndOperationDelegate onEndGetProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitDataDelegate;
        
        private EndOperationDelegate onEndSubmitDataDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MyScienceServiceClient() {
        }
        
        public MyScienceServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyScienceServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyScienceServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyScienceServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProjectsCompletedEventArgs> GetProjectsCompleted;
        
        public event System.EventHandler<SubmitDataCompletedEventArgs> SubmitDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyScience.MyScienceService.MyScienceService.BeginGetProjects(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjects(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> MyScience.MyScienceService.MyScienceService.EndGetProjects(System.IAsyncResult result) {
            return base.Channel.EndGetProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((MyScience.MyScienceService.MyScienceService)(this)).BeginGetProjects(callback, asyncState);
        }
        
        private object[] OnEndGetProjects(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> retVal = ((MyScience.MyScienceService.MyScienceService)(this)).EndGetProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsCompleted(object state) {
            if ((this.GetProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsCompleted(this, new GetProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsAsync() {
            this.GetProjectsAsync(null);
        }
        
        public void GetProjectsAsync(object userState) {
            if ((this.onBeginGetProjectsDelegate == null)) {
                this.onBeginGetProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetProjects);
            }
            if ((this.onEndGetProjectsDelegate == null)) {
                this.onEndGetProjectsDelegate = new EndOperationDelegate(this.OnEndGetProjects);
            }
            if ((this.onGetProjectsCompletedDelegate == null)) {
                this.onGetProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsDelegate, null, this.onEndGetProjectsDelegate, this.onGetProjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult MyScience.MyScienceService.MyScienceService.BeginSubmitData(int id, int projectid, int userid, string data, string location, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmitData(id, projectid, userid, data, location, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int MyScience.MyScienceService.MyScienceService.EndSubmitData(System.IAsyncResult result) {
            return base.Channel.EndSubmitData(result);
        }
        
        private System.IAsyncResult OnBeginSubmitData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            int projectid = ((int)(inValues[1]));
            int userid = ((int)(inValues[2]));
            string data = ((string)(inValues[3]));
            string location = ((string)(inValues[4]));
            return ((MyScience.MyScienceService.MyScienceService)(this)).BeginSubmitData(id, projectid, userid, data, location, callback, asyncState);
        }
        
        private object[] OnEndSubmitData(System.IAsyncResult result) {
            int retVal = ((MyScience.MyScienceService.MyScienceService)(this)).EndSubmitData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitDataCompleted(object state) {
            if ((this.SubmitDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitDataCompleted(this, new SubmitDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitDataAsync(int id, int projectid, int userid, string data, string location) {
            this.SubmitDataAsync(id, projectid, userid, data, location, null);
        }
        
        public void SubmitDataAsync(int id, int projectid, int userid, string data, string location, object userState) {
            if ((this.onBeginSubmitDataDelegate == null)) {
                this.onBeginSubmitDataDelegate = new BeginOperationDelegate(this.OnBeginSubmitData);
            }
            if ((this.onEndSubmitDataDelegate == null)) {
                this.onEndSubmitDataDelegate = new EndOperationDelegate(this.OnEndSubmitData);
            }
            if ((this.onSubmitDataCompletedDelegate == null)) {
                this.onSubmitDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitDataCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitDataDelegate, new object[] {
                        id,
                        projectid,
                        userid,
                        data,
                        location}, this.onEndSubmitDataDelegate, this.onSubmitDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override MyScience.MyScienceService.MyScienceService CreateChannel() {
            return new MyScienceServiceClientChannel(this);
        }
        
        private class MyScienceServiceClientChannel : ChannelBase<MyScience.MyScienceService.MyScienceService>, MyScience.MyScienceService.MyScienceService {
            
            public MyScienceServiceClientChannel(System.ServiceModel.ClientBase<MyScience.MyScienceService.MyScienceService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProjects(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProjects", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> EndGetProjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<MyScience.MyScienceService.Project>)(base.EndInvoke("GetProjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSubmitData(int id, int projectid, int userid, string data, string location, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = id;
                _args[1] = projectid;
                _args[2] = userid;
                _args[3] = data;
                _args[4] = location;
                System.IAsyncResult _result = base.BeginInvoke("SubmitData", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSubmitData(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SubmitData", _args, result)));
                return _result;
            }
        }
    }
}
